{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE28379D5B5178210F348eAC5e1bb83b7ED28EaB1",
    "txHash": "0x0bbc719f0187f1cf602ff736f8e801749310ba1a8ded8f1c77da0dc836b8eb56"
  },
  "proxies": [
    {
      "address": "0x4a6A377be74DA47dfa2Cc854dA4A8E294ea342F9",
      "txHash": "0x0b6a0f93c1b0a2251e15ef1901dc37c63fa811024412d0b9e1cf59e87cd2609d",
      "kind": "transparent"
    },
    {
      "address": "0xEE5218a2DB884D7fF6579c1cf1AcDEC98e5ECc7a",
      "txHash": "0x3fb33afef0b33344f41f5bb97a77b8ca6e7aa3f7e594dfc2a646bc09e8cb4fdc",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3ab3945ff645e05b23cf1f4fdbd09a0cf3308d35c614b016b8cda948e74360c0": {
      "address": "0xefC1389C6c28C1B60A3cAee4488B56365A448CAE",
      "txHash": "0xda40c55b06707e3ebb013505d1378a33b066c71fda68c5cac8104dcf508dcba8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_users",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(UserInfo)8159_storage)",
            "contract": "ERC4907",
            "src": "contracts/erc4907/ERC4907.sol:13"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)6649_storage",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:16"
          },
          {
            "label": "auctionDepositContractAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:18"
          },
          {
            "label": "membershipNFTAddress",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:19"
          },
          {
            "label": "auctionAdminAddress",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:20"
          },
          {
            "label": "communityTreasuryAddress",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:21"
          },
          {
            "label": "basicMembershipTokenId",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:23"
          },
          {
            "label": "silverMembershipTokenId",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:24"
          },
          {
            "label": "goldMembershipTokenId",
            "offset": 0,
            "slot": "259",
            "type": "t_uint256",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:25"
          },
          {
            "label": "_monoNFTs",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(MonoNFT)8490_storage)",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:27"
          },
          {
            "label": "_latestWinner",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_struct(Winner)8502_storage)",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:28"
          },
          {
            "label": "_historyOfWinners",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_array(t_struct(Winner)8502_storage)dyn_storage)",
            "contract": "MonoNFT",
            "src": "contracts/MonoNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ShareOfCommunityToken)8495_storage)dyn_storage": {
            "label": "struct IMonoNFT.ShareOfCommunityToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Winner)8502_storage)dyn_storage": {
            "label": "struct IMonoNFT.Winner[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(MonoNFTStatus)8471": {
            "label": "enum IMonoNFT.MonoNFTStatus",
            "members": [
              "READY",
              "IN_AUCTION",
              "CONFIRMED",
              "CLAIMED",
              "DEPRECATED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Winner)8502_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IMonoNFT.Winner[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MonoNFT)8490_storage)": {
            "label": "mapping(uint256 => struct IMonoNFT.MonoNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UserInfo)8159_storage)": {
            "label": "mapping(uint256 => struct ERC4907.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Winner)8502_storage)": {
            "label": "mapping(uint256 => struct IMonoNFT.Winner)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6649_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MonoNFT)8490_storage": {
            "label": "struct IMonoNFT.MonoNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "donor",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expiresDuration",
                "type": "t_uint64",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(MonoNFTStatus)8471",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sharesOfCommunityToken",
                "type": "t_array(t_struct(ShareOfCommunityToken)8495_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ShareOfCommunityToken)8495_storage": {
            "label": "struct IMonoNFT.ShareOfCommunityToken",
            "members": [
              {
                "label": "shareHolder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shareRatio",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)8159_storage": {
            "label": "struct ERC4907.UserInfo",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expires",
                "type": "t_uint64",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Winner)8502_storage": {
            "label": "struct IMonoNFT.Winner",
            "members": [
              {
                "label": "winner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expires",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "72761fb93b9148e23d50cb908fe07e7338eff46142a4ebadccab76170496bf5e": {
      "address": "0xcDfEd43f55Af4cE95C0E0f3BDbA18D2aa0828AcD",
      "txHash": "0xb6d3be6d32733d426244f8472da1068a09e082805f2233493fdcc66d9df62f71",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "communityTokenAddr",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:19"
          },
          {
            "label": "monoNFTAddr",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:20"
          },
          {
            "label": "auctionAdminAddr",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:21"
          },
          {
            "label": "maxDeposit",
            "offset": 0,
            "slot": "54",
            "type": "t_uint256",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:22"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "55",
            "type": "t_bool",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:23"
          },
          {
            "label": "_deposits",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AuctionDeposit",
            "src": "contracts/AuctionDeposit.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
